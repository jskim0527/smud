<html>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<head>

  <!-- 라이브러리 -->
  <script src="js/fabric.min.js"></script>
  <script src="js/index.min.js"></script> <!-- undo/redo -->
  <script src="js/jquery-3.5.1.min.js"></script>
  <script src="js/FileSaver.min.js"></script>
  <script src="js/canvas-toBlob.js"></script>
  <script src="js/vanilla-picker.min.js"></script>

  <style>
    @import url(http://fonts.googleapis.com/earlyaccess/notosanskr.css);

    body {
      font-family: "Noto Sans KR", sans-serif;
      margin: 0px;        
    }

    /* 메뉴 */
    .navbar {
      overflow: hidden;
      /* height: 38px; */
      color: #CCCCCC;
      background-color: #333333;
      border-bottom: #1E1E1E;
      align-items: center;
    }
    
    .navbar a {
      float: left;
      font-size: 16px;
      color: white;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
      align-items: center;
    }

    .navbar .saperator {
      /* display:inline; */
      list-style: none;
      /* padding: 5px 0px 5px 0px; */
      /* margin-bottom: 5px;       */
      border-bottom: 1px solid #c0c0c0;
    }

    .dropdown {
      float: left;
      overflow: hidden;
    }

    .dropdown .dropbtn {
      font-size: 16px;  
      border: none;
      outline: none;
      color: white;
      padding: 14px 16px;
      background-color: inherit;
      font-family: inherit;
      margin: 0;
    }  

    .navbar a:hover, .dropdown:hover .dropbtn {
      background-color: red;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      background-color: #333333;
      min-width: 160px;
      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
      z-index: 1;
    }

    .dropdown-content a {
      float: none;
      color: black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
      text-align: left;
    }

    .dropdown-content a:hover {
      background-color: red;
    }

    .dropdown:hover .dropdown-content {
      display: block;
    }

    #mind_area {

    }

</style>
</head>

		<!-- 문자열 -->
		<!-- 컬러가이드 -->
    <!-- 저장 -->

<body>
  <div class="navbar">
    <a href="#">SMUD</a>
    <div class="dropdown">
      <button class="dropbtn">
        <img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/menu.png" alt="파일"/>
        <!-- <img src="https://img.icons8.com/fluent-systems-filled/12/ffffff/sort-down.png"/> -->
      </button>
      <div class="dropdown-content">
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/file.png" alt="신규"/></a>
        <li class="saperator"></li>
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/share-3.png" alt="공유"/></a>
        <li class="saperator"></li>
        <a href="#"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/save.png" alt="저장"/></a>
        
      </div>
    </div>
    <div class="dropdown">
      <button class="dropbtn">
        <img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/edit.png" alt="편집"/>
      </button>
      <div class="dropdown-content">
        <a href="#" id="menu_undo"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/undo--v1.png" alt="실행 취소"/></a>
        <a href="#" id="menu_redo"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/redo.png" alt="다시 실행"/></a>
        <li class="saperator"></li>
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/cut.png" alt="잘라내기"/></a>
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/copy.png" alt="복사"/></a>
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/paste.png" alt="붙여넣기"/></a>
        <a href=""><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/delete-forever.png" alt="삭제"/></a>        
        <li class="saperator"></li>
        
      </div>
    </div>    
    <a href="#"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/image.png" alt="이미지불러오기"/></a>
    <a href="#" id="menu_addText"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/text-color.png" alt="문자열"/></a>
    <a href="#" id="menu_addColorBox"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/color-palette.png" alt="색"/></a>
    <a href="#"><img src="https://img.icons8.com/fluent-systems-filled/24/ffffff/help.png" alt="도움말"/></a>     
  </div>
  <div id="content contenteditable=true">
    <canvas id="c" class="refs"></canvas>
  </div>


  <script>  
    var MAX_WIDTH = 800;
    var MAX_HEGIHT = 1000;
    var STR_RGB = "#6ae2ff";

    (function() {

      fabric.Object.prototype.transparentCorners = false;
      fabric.Object.prototype.cornerColor = 'blue';
      fabric.Object.prototype.cornerStyle = 'circle';

      // fabric.Canvas.prototype.historyInit = function () {
      //   this.historyUndo = [];
      //   this.historyNextState = this.historyNext();

      //   this.on({
      //     "object:added": this.historySaveAction,
      //     "object:removed": this.historySaveAction,
      //     "object:modified": this.historySaveAction
      //   })
      // }

      // fabric.Canvas.prototype.historyNext = function () {
      //   return JSON.stringify(this.toDatalessJSON(this.extraProps));
      // }

      // fabric.Canvas.prototype.historySaveAction = function () {
      //   if (this.historyProcessing)
      //     return;

      //   const json = this.historyNextState;
      //   this.historyUndo.push(json);
      //   this.historyNextState = this.historyNext();

      //   console.log("history");
      // }

      // fabric.Canvas.prototype.undo = function () {
      //   // The undo process will render the new states of the objects
      //   // Therefore, object:added and object:modified events will triggered again
      //   // To ignore those events, we are setting a flag.
      //   this.historyProcessing = true;

      //   const history = this.historyUndo.pop();
      //   if (history) {
      //     this.loadFromJSON(history).renderAll();
      //   }

      //   this.historyProcessing = false;
      // }      
      
      var $wrapper = $('#content'),
        canvas = new fabric.Canvas('c', {
          selection: false,
          fireRightClick: true,
          stopContextMenu: true,
          width: MAX_WIDTH,
          height: MAX_HEGIHT
        }),
        /*-----------------------------------------------------------*/
        // 클립보드 이미지 붙여 넣기
        /*-----------------------------------------------------------*/
        fnPasteImage = function(e) {
          // alert();
          var items = e.originalEvent.clipboardData.items;
          
          e.preventDefault();
          e.stopPropagation();
          
          //Loop through files
          for (var i = 0; i < items.length; i++) {
            if (items[i].type.indexOf('image') == -1) continue;
            var file = items[i],
              type = items[i].type;
            var imageData = file.getAsFile();
            var URLobj = window.URL || window.webkitURL;
            var img = new Image();
            img.src = URLobj.createObjectURL(imageData);
            fabric.Image.fromURL(img.src, function(img) {
              canvas.add(img);
            });
          }
        },

        /*-----------------------------------------------------------*/
        // 문자열 추가
        /*-----------------------------------------------------------*/
        fnAddText = function(e) {
          var rect = new fabric.Textbox('This is TextBox', {
            left: 100,
            top: 50,
            width: 200,
            height: 100,
            fontSize: 20,
            objectCaching: false,
            fontFamily: 'Noto Sans KR'
            //hasControls: false,
          });

          canvas.add(rect);
          canvas.setActiveObject(rect);
        },        

        /*-----------------------------------------------------------*/
        // 컬러 가이드 추가
        /*-----------------------------------------------------------*/
        fnAddColorGuide = function(e) {
          var rect = new fabric.Rect({
            left: 100,
            top: 50,
            fill: STR_RGB,
            width: 200,
            height: 100,
            objectCaching: false,
            //stroke: 'lightgreen',
            //strokeWidth: 4,
          });

          canvas.add(rect);
          canvas.setActiveObject(rect);
        },

        //Canvas starter text
        fnIntroCanvas = function() {
          // GRID
          var grid = 50;
          // create grid

          for (var i = 0; i < (MAX_HEGIHT / grid); i++) {
            canvas.add(new fabric.Line([i * grid, 0, i * grid, MAX_HEGIHT], {
              stroke: '#d6d6d6',
              selectable: false
            }));
            canvas.add(new fabric.Line([0, i * grid, MAX_WIDTH, i * grid], {
              stroke: '#d6d6d6',
              selectable: false
            }))
          }

          canvas.on({
            'object:moving': function(options) {
              if (Math.round(options.target.left / grid * 4) % 4 == 0 &&
              Math.round(options.target.top / grid * 4) % 4 == 0) {
              options.target.set({
                left: Math.round(options.target.left / grid) * grid,
                top: Math.round(options.target.top / grid) * grid
              }).setCoords();
              }  
            },
            'touch:longpress': function() {
              alert();
            }
          });

          // canvas.on('object:moving', function(options) {
          //   if (Math.round(options.target.left / grid * 4) % 4 == 0 &&
          //     Math.round(options.target.top / grid * 4) % 4 == 0) {
          //     options.target.set({
          //       left: Math.round(options.target.left / grid) * grid,
          //       top: Math.round(options.target.top / grid) * grid
          //     }).setCoords();
          //   }
          // });
          
          // canvas.add(introTxt);                
        };

        // 배경 그리드
        fnIntroCanvas();

        // canvas.historyInit();

        // 붙여넣기 이벤트
        $(window).on('paste', fnPasteImage);

        $(window).keydown(function(e) {	  
          console.log(e.which);
          if (e.which === 89 && e.ctrlKey) {
            // control + y
            //replay(redo, undo, '#undo', this);
          } else if (e.which === 90 && e.ctrlKey) {
            // control + z
            //replay(undo, redo, '#redo', this);
          } else if (e.which === 67 && e.ctrlKey) {
            // control + c
            // Copy();
            console.log("Copy");
          } else if (e.which === 86 && e.ctrlKey) {
            // control + v
            // Paste();
            console.log("Paste");
          }
        });

        /*-----------------------------------------------------------*/
        // 메뉴 기능
        /*-----------------------------------------------------------*/        
        // 문자열 추가
        $("#menu_addText").click(function(){
          fnAddText();
        });

        // 컬러가이드 추가
        $("#menu_addColorBox").click(function(){
          fnAddColorGuide();
        });

        // 이미지로 저장하기
        $("#btn_save").click(function(){
          $("#c").get(0).toBlob(function(blob) {
            saveAs(blob, "myImg.png");
          });
        });

        $("#menu_undo").click(function(){
          canvas.undo();
        });

        $("#menu_redo").click(function(){
          canvas.redo();
        });

        // $("#btn_paste").click(function(){
        //   alert("준비중");
        //   fnPasteImage();
        // });
        
      })();
   
  </script>  
  
</body>
</html>